#include <Wire.h> 
#include <Adafruit_Sensor.h>
#include <DHT.h>
#include <DHT_U.h>
#include "sound_effect.h" 
#include "U8glib.h"
#define DHTPIN            5  
#define DHTTYPE           DHT22    
DHT_Unified dht(DHTPIN, DHTTYPE);
uint32_t delayMS;
U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE|U8G_I2C_OPT_DEV_0);
int blue_pin = 2; 
int green_pin = 3; 
int red_pin = 4;  
int pin = 8;  //fine dust sensor
int buzzer_pin = 13; 
unsigned long duration;   
unsigned long starttime;  
unsigned long sampletime_ms = 1000;   
unsigned long lowpulseoccupancy = 0;  
float ratio = 0; 
float concentration = 0;  
float pcsPerCF = 0;
float ugm3 = 0; 

void setup() {
  Serial.begin(9600); 
    dht.begin();
      sensor_t sensor;
  dht.temperature().getSensor(&sensor);
  dht.humidity().getSensor(&sensor);
    delayMS = sensor.min_delay / 1000;
     if ( u8g.getMode() == U8G_MODE_R3G3B2 ) {
    u8g.setColorIndex(255);     // white
  }
  else if ( u8g.getMode() == U8G_MODE_GRAY2BIT ) {
    u8g.setColorIndex(3);         // max intensity
  }
  else if ( u8g.getMode() == U8G_MODE_BW ) {
    u8g.setColorIndex(1);         // pixel on
  }
  else if ( u8g.getMode() == U8G_MODE_HICOLOR ) {
    u8g.setHiColorByRGB(255,255,255);
  }
  
  pinMode(8,INPUT);  //fine dust detector
  pinMode(2,OUTPUT);  //Blue LED
  pinMode(3,OUTPUT);   //Green LED
  pinMode(4,OUTPUT);   //Red LED
  pinMode(13,OUTPUT);   //BUZZER
  digitalWrite(blue_pin, HIGH); 
  digitalWrite(green_pin, HIGH); 
  digitalWrite(red_pin, HIGH);  
  starttime = millis();  
  
u8g.firstPage();
    do{
        u8g.setFont(u8g_font_unifont);
        u8g.drawStr(0,12, "Fine Dust Detector");
        u8g.drawStr(0,32, "Starting.....");
    }while(u8g.nextPage());
    
  seSqueak(13);  
  delay(5000); 
  if ( ugm3 == 0) {   
    u8g.firstPage();
    do{
        u8g.setFont(u8g_font_unifont);
        u8g.drawStr(0,12, "Analysing Data");
        u8g.drawStr(0,32, "............");
    }while(u8g.nextPage());
     
    lowpulseoccupancy = 0;
    starttime = millis();
  }
}
void loop() {
  duration = pulseIn(pin, LOW); 
  lowpulseoccupancy = lowpulseoccupancy+duration;
    delay(delayMS);
  sensors_event_t event;  
  dht.temperature().getEvent(&event);
    dht.humidity().getEvent(&event);
    u8g.firstPage();
    do{
        dht.temperature().getEvent(&event);
        u8g.setFont(u8g_font_unifont);
        u8g.drawStr(26,12, "Temperature");
         u8g.setPrintPos(40,32);
          u8g.setFont(u8g_font_fur14);
        u8g.print(event.temperature);
         u8g.setFont(u8g_font_unifont);
        u8g.print("'C");
        dht.humidity().getEvent(&event);
        u8g.setPrintPos(36,45);
        u8g.print("Humidity");
        u8g.setFont(u8g_font_fur14);
         u8g.setPrintPos(40,64);
        u8g.print(event.relative_humidity);
        u8g.setFont(u8g_font_unifont);
        u8g.print("%");
    }while(u8g.nextPage());
    delay(2000);
  
  if ((millis()-starttime) >= sampletime_ms)  {   
    ratio = lowpulseoccupancy/(sampletime_ms*10.0);  
    concentration = 1.1*pow(ratio,3)-3.8*pow(ratio,2)+520*ratio+0.62; 
    pcsPerCF = concentration * 100;  
    ugm3 = pcsPerCF / 13000;  
        Serial.print(ugm3);
    if (ugm3 > 0.01 ) {  
      u8g.firstPage();
    do{
        u8g.setFont(u8g_font_unifont);
        u8g.setPrintPos(32,24);
        u8g.print("Fine Dust");
        u8g.setPrintPos(28,48);
         u8g.setFont(u8g_font_fur14);
        u8g.print(ugm3);
         u8g.setFont(u8g_font_unifont);
        u8g.print("ug/m3");
    }while(u8g.nextPage());
    delay(2000);
     
      lowpulseoccupancy = 0;
      starttime = millis();
    }
  
    if (ugm3 > 0.01 && ugm3 <= 30) {   
          u8g.firstPage();
      do{
        u8g.setFont(u8g_font_fub14);
        u8g.setPrintPos(36,36);
        u8g.print("GOOD! ");
    }while(u8g.nextPage());
    setColor(0, 0, 255);  //Blue
      noTone(13);   
   
    }
    else if (ugm3 > 30 && ugm3 <= 80) {  
     u8g.firstPage();
      do{
        u8g.setFont(u8g_font_fub14);
        u8g.setPrintPos(36,36);
        u8g.print("SOSO! ");
    }while(u8g.nextPage());
      
   
      setColor(0, 255, 225);  //Blue Green
      noTone(13);   
    }
    else if (ugm3 > 80 && ugm3 <= 150) {  
      u8g.firstPage();
      do{
        u8g.setFont(u8g_font_fub14);
        u8g.setPrintPos(36,36);
        u8g.print("BAD! ");
    }while(u8g.nextPage());
      setColor(255, 120, 0); 
      noTone(13);    
    }
    else if (ugm3 > 150) {  
      u8g.firstPage();
       do{
        u8g.setFont(u8g_font_fub14);
        u8g.setPrintPos(12,36);
        u8g.print("BE");
        u8g.setPrintPos(6,50);
        u8g.print("CAREFUL!");
    }while(u8g.nextPage());
      setColor(255, 0, 0);  //RED
      tone(13, 500);    //500Hz
    }    
  }
}
void setColor(int red, int green, int blue) {  //RGB LED 
  analogWrite(red_pin, 255-red);
  analogWrite(green_pin, 255-green);
  analogWrite(blue_pin, 255-blue); 
} 
